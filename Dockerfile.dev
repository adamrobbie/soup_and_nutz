# Use the official Elixir image as base
FROM elixir:1.15-alpine

# Install build dependencies including those needed for bcrypt_elixir
RUN apk add --no-cache build-base git nodejs npm inotify-tools \
    && apk add --no-cache --virtual .build-deps \
        gcc \
        musl-dev \
        make \
        libc-dev \
        openssl-dev

# Set working directory
WORKDIR /app

# Install hex + rebar
RUN mix local.hex --force && \
    mix local.rebar --force

# Set build ENV
ENV MIX_ENV=dev

# Copy mix files (mix.lock is optional)
COPY mix.exs ./
COPY mix.lock* ./

# Install dependencies with proper error handling
RUN mix deps.get --only $MIX_ENV || (echo "Dependency installation failed, retrying..." && mix deps.get --only $MIX_ENV)

# Create config directory
RUN mkdir -p config

# Copy config directory
COPY config config

# Copy assets
COPY priv priv
COPY assets assets

# Install Node.js dependencies for esbuild and tailwind (if package.json exists)
RUN if [ -f assets/package.json ]; then \
        cd assets && npm install; \
    else \
        echo "No package.json found in assets, skipping npm install"; \
    fi

# Copy the rest of the application
COPY lib lib

# Clean up build dependencies
RUN apk del .build-deps

# Expose port
EXPOSE 4000

# Default command
CMD ["mix", "phx.server"] 