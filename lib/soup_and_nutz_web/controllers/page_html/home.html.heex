<.flash_group flash={@flash} />

<!-- Dashboard Header -->
<div class="bg-gradient-to-r from-blue-600 to-purple-600 text-white">
  <div class="px-4 py-8 sm:px-6 lg:px-8">
    <div class="mx-auto max-w-7xl">
      <div class="flex items-center justify-between">
        <div>
          <h1 class="text-3xl font-bold tracking-tight sm:text-4xl">
            Financial Dashboard
          </h1>
          <p class="mt-2 text-blue-100">
            Your complete financial overview with XBRL compliance
          </p>
        </div>
        <div class="flex space-x-4">
          <a
            href="/assets"
            class="inline-flex items-center rounded-md bg-white/10 px-4 py-2 text-sm font-medium text-white hover:bg-white/20"
          >
            <svg class="mr-2 h-4 w-4" fill="none" stroke="currentColor" viewBox="0 0 24 24">
              <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 6v6m0 0v6m0-6h6m-6 0H6"/>
            </svg>
            Manage Assets
          </a>
          <a
            href="/debt_obligations"
            class="inline-flex items-center rounded-md bg-white/10 px-4 py-2 text-sm font-medium text-white hover:bg-white/20"
          >
            <svg class="mr-2 h-4 w-4" fill="none" stroke="currentColor" viewBox="0 0 24 24">
              <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 12l2 2 4-4m6 2a9 9 0 11-18 0 9 9 0 0118 0z"/>
            </svg>
            Manage Debts
          </a>
        </div>
      </div>
    </div>
  </div>
</div>

<!-- Dashboard Content -->
<div class="px-4 py-8 sm:px-6 lg:px-8">
  <div class="mx-auto max-w-7xl">
    
    <!-- Summary Cards -->
    <div class="grid grid-cols-1 gap-6 sm:grid-cols-2 lg:grid-cols-4 mb-8">
      <!-- Total Assets -->
      <div class="bg-white overflow-hidden shadow rounded-lg">
        <div class="p-5">
          <div class="flex items-center">
            <div class="flex-shrink-0">
              <div class="w-8 h-8 bg-green-100 rounded-md flex items-center justify-center">
                <svg class="w-5 h-5 text-green-600" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                  <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 8c-1.657 0-3 .895-3 2s1.343 2 3 2 3 .895 3 2-1.343 2-3 2m0-8c1.11 0 2.08.402 2.599 1M12 8V7m0 1v8m0 0v1m0-1c-1.11 0-2.08-.402-2.599-1"/>
                </svg>
              </div>
            </div>
            <div class="ml-5 w-0 flex-1">
              <dl>
                <dt class="text-sm font-medium text-gray-500 truncate">Total Assets</dt>
                <dd class="text-lg font-medium text-gray-900">
                  $<%= Decimal.to_string(@dashboard_data.summary.total_assets) %>
                </dd>
              </dl>
            </div>
          </div>
        </div>
      </div>

      <!-- Total Debt -->
      <div class="bg-white overflow-hidden shadow rounded-lg">
        <div class="p-5">
          <div class="flex items-center">
            <div class="flex-shrink-0">
              <div class="w-8 h-8 bg-red-100 rounded-md flex items-center justify-center">
                <svg class="w-5 h-5 text-red-600" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                  <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 12l2 2 4-4m6 2a9 9 0 11-18 0 9 9 0 0118 0z"/>
                </svg>
              </div>
            </div>
            <div class="ml-5 w-0 flex-1">
              <dl>
                <dt class="text-sm font-medium text-gray-500 truncate">Total Debt</dt>
                <dd class="text-lg font-medium text-gray-900">
                  $<%= Decimal.to_string(@dashboard_data.summary.total_debt) %>
                </dd>
              </dl>
            </div>
          </div>
        </div>
      </div>

      <!-- Net Worth -->
      <div class="bg-white overflow-hidden shadow rounded-lg">
        <div class="p-5">
          <div class="flex items-center">
            <div class="flex-shrink-0">
              <div class="w-8 h-8 bg-blue-100 rounded-md flex items-center justify-center">
                <svg class="w-5 h-5 text-blue-600" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                  <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M13 7h8m0 0v8m0-8l-8 8-4-4-6 6"/>
                </svg>
              </div>
            </div>
            <div class="ml-5 w-0 flex-1">
              <dl>
                <dt class="text-sm font-medium text-gray-500 truncate">Net Worth</dt>
                <dd class={"text-lg font-medium #{if Decimal.gt?(@dashboard_data.summary.net_worth, Decimal.new("0")), do: "text-green-600", else: "text-red-600"}"}>
                  $<%= Decimal.to_string(@dashboard_data.summary.net_worth) %>
                </dd>
              </dl>
            </div>
          </div>
        </div>
      </div>

      <!-- Debt to Asset Ratio -->
      <div class="bg-white overflow-hidden shadow rounded-lg">
        <div class="p-5">
          <div class="flex items-center">
            <div class="flex-shrink-0">
              <div class="w-8 h-8 bg-yellow-100 rounded-md flex items-center justify-center">
                <svg class="w-5 h-5 text-yellow-600" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                  <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 19v-6a2 2 0 00-2-2H5a2 2 0 00-2 2v6a2 2 0 002 2h2a2 2 0 002-2zm0 0V9a2 2 0 012-2h2a2 2 0 012 2v10m-6 0a2 2 0 002 2h2a2 2 0 002-2m0 0V5a2 2 0 012-2h2a2 2 0 012 2v14a2 2 0 01-2 2h-2a2 2 0 01-2-2z"/>
                </svg>
              </div>
            </div>
            <div class="ml-5 w-0 flex-1">
              <dl>
                <dt class="text-sm font-medium text-gray-500 truncate">Debt/Asset Ratio</dt>
                <dd class="text-lg font-medium text-gray-900">
                  <%= Decimal.to_string(Decimal.mult(@dashboard_data.summary.debt_to_asset_ratio, Decimal.new("100"))) %>%
                </dd>
              </dl>
            </div>
          </div>
        </div>
      </div>
    </div>

    <!-- Charts Section -->
    <div class="grid grid-cols-1 lg:grid-cols-2 gap-8 mb-8">
      <!-- Assets by Type Chart -->
      <div class="bg-white shadow rounded-lg">
        <div class="px-4 py-5 sm:p-6">
          <h3 class="text-lg leading-6 font-medium text-gray-900 mb-4">Assets by Type</h3>
          <div class="relative" style="height: 300px;">
            <canvas id="assetsByTypeChart"></canvas>
          </div>
        </div>
      </div>

      <!-- Debts by Type Chart -->
      <div class="bg-white shadow rounded-lg">
        <div class="px-4 py-5 sm:p-6">
          <h3 class="text-lg leading-6 font-medium text-gray-900 mb-4">Debts by Type</h3>
          <div class="relative" style="height: 300px;">
            <canvas id="debtsByTypeChart"></canvas>
          </div>
        </div>
      </div>
    </div>

    <!-- Currency Distribution Charts -->
    <div class="grid grid-cols-1 lg:grid-cols-2 gap-8 mb-8">
      <!-- Assets by Currency Chart -->
      <div class="bg-white shadow rounded-lg">
        <div class="px-4 py-5 sm:p-6">
          <h3 class="text-lg leading-6 font-medium text-gray-900 mb-4">Assets by Currency</h3>
          <div class="relative" style="height: 300px;">
            <canvas id="assetsByCurrencyChart"></canvas>
          </div>
        </div>
      </div>

      <!-- Debts by Currency Chart -->
      <div class="bg-white shadow rounded-lg">
        <div class="px-4 py-5 sm:p-6">
          <h3 class="text-lg leading-6 font-medium text-gray-900 mb-4">Debts by Currency</h3>
          <div class="relative" style="height: 300px;">
            <canvas id="debtsByCurrencyChart"></canvas>
          </div>
        </div>
      </div>
    </div>

    <!-- Recent Activity -->
    <div class="grid grid-cols-1 lg:grid-cols-2 gap-8">
      <!-- Recent Assets -->
      <div class="bg-white shadow rounded-lg">
        <div class="px-4 py-5 sm:p-6">
          <h3 class="text-lg leading-6 font-medium text-gray-900 mb-4">Recent Assets</h3>
          <div class="flow-root">
            <ul class="-my-5 divide-y divide-gray-200">
              <%= for asset <- @dashboard_data.recent_activity.assets do %>
                <li class="py-4">
                  <div class="flex items-center space-x-4">
                    <div class="flex-shrink-0">
                      <div class="w-8 h-8 bg-green-100 rounded-full flex items-center justify-center">
                        <svg class="w-4 h-4 text-green-600" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                          <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 8c-1.657 0-3 .895-3 2s1.343 2 3 2 3 .895 3 2-1.343 2-3 2m0-8c1.11 0 2.08.402 2.599 1M12 8V7m0 1v8m0 0v1m0-1c-1.11 0-2.08-.402-2.599-1"/>
                        </svg>
                      </div>
                    </div>
                    <div class="flex-1 min-w-0">
                      <p class="text-sm font-medium text-gray-900 truncate">
                        <%= asset.asset_name %>
                      </p>
                      <p class="text-sm text-gray-500">
                        <%= asset.asset_type %> â€¢ <%= asset.currency_code %>
                      </p>
                    </div>
                    <div class="flex-shrink-0 text-sm font-medium text-gray-900">
                      $<%= Decimal.to_string(asset.fair_value) %>
                    </div>
                  </div>
                </li>
              <% end %>
            </ul>
          </div>
          <div class="mt-6">
            <a href="/assets" class="w-full flex justify-center items-center px-4 py-2 border border-gray-300 shadow-sm text-sm font-medium rounded-md text-gray-700 bg-white hover:bg-gray-50">
              View all assets
            </a>
          </div>
        </div>
      </div>

      <!-- Recent Debts -->
      <div class="bg-white shadow rounded-lg">
        <div class="px-4 py-5 sm:p-6">
          <h3 class="text-lg leading-6 font-medium text-gray-900 mb-4">Recent Debts</h3>
          <div class="flow-root">
            <ul class="-my-5 divide-y divide-gray-200">
              <%= for debt <- @dashboard_data.recent_activity.debts do %>
                <li class="py-4">
                  <div class="flex items-center space-x-4">
                    <div class="flex-shrink-0">
                      <div class="w-8 h-8 bg-red-100 rounded-full flex items-center justify-center">
                        <svg class="w-4 h-4 text-red-600" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                          <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 12l2 2 4-4m6 2a9 9 0 11-18 0 9 9 0 0118 0z"/>
                        </svg>
                      </div>
                    </div>
                    <div class="flex-1 min-w-0">
                      <p class="text-sm font-medium text-gray-900 truncate">
                        <%= debt.debt_name %>
                      </p>
                      <p class="text-sm text-gray-500">
                        <%= debt.debt_type %> â€¢ <%= debt.currency_code %>
                      </p>
                    </div>
                    <div class="flex-shrink-0 text-sm font-medium text-gray-900">
                      $<%= if debt.principal_amount, do: Decimal.to_string(debt.principal_amount), else: "0.00" %>
                    </div>
                  </div>
                </li>
              <% end %>
            </ul>
          </div>
          <div class="mt-6">
            <a href="/debt_obligations" class="w-full flex justify-center items-center px-4 py-2 border border-gray-300 shadow-sm text-sm font-medium rounded-md text-gray-700 bg-white hover:bg-gray-50">
              View all debts
            </a>
          </div>
        </div>
      </div>
    </div>
  </div>
</div>

<!-- Chart.js Script -->
<script>
document.addEventListener('DOMContentLoaded', function() {
  // Chart colors
  const colors = [
    '#3B82F6', '#EF4444', '#10B981', '#F59E0B', '#8B5CF6',
    '#06B6D4', '#84CC16', '#F97316', '#EC4899', '#6366F1'
  ];

  // Assets by Type Chart
  const assetsByTypeCtx = document.getElementById('assetsByTypeChart').getContext('2d');
  new Chart(assetsByTypeCtx, {
    type: 'pie',
    data: {
      labels: <%= Jason.encode!(Enum.map(@dashboard_data.charts.assets_by_type, & &1.type)) %>,
      datasets: [{
        data: <%= Jason.encode!(Enum.map(@dashboard_data.charts.assets_by_type, fn asset -> 
          Decimal.to_float(asset.value)
        end)) %>,
        backgroundColor: colors.slice(0, length(@dashboard_data.charts.assets_by_type)),
        borderWidth: 2,
        borderColor: '#ffffff'
      }]
    },
    options: {
      responsive: true,
      maintainAspectRatio: false,
      plugins: {
        legend: {
          position: 'bottom',
          labels: {
            padding: 20,
            usePointStyle: true
          }
        },
        tooltip: {
          callbacks: {
            label: function(context) {
              const label = context.label || '';
              const value = context.parsed;
              const total = context.dataset.data.reduce((a, b) => a + b, 0);
              const percentage = ((value / total) * 100).toFixed(1);
              return `${label}: $${value.toLocaleString()} (${percentage}%)`;
            }
          }
        }
      }
    }
  });

  // Debts by Type Chart
  const debtsByTypeCtx = document.getElementById('debtsByTypeChart').getContext('2d');
  new Chart(debtsByTypeCtx, {
    type: 'pie',
    data: {
      labels: <%= Jason.encode!(Enum.map(@dashboard_data.charts.debts_by_type, & &1.type)) %>,
      datasets: [{
        data: <%= Jason.encode!(Enum.map(@dashboard_data.charts.debts_by_type, fn debt -> 
          Decimal.to_float(debt.value)
        end)) %>,
        backgroundColor: colors.slice(0, length(@dashboard_data.charts.debts_by_type)),
        borderWidth: 2,
        borderColor: '#ffffff'
      }]
    },
    options: {
      responsive: true,
      maintainAspectRatio: false,
      plugins: {
        legend: {
          position: 'bottom',
          labels: {
            padding: 20,
            usePointStyle: true
          }
        },
        tooltip: {
          callbacks: {
            label: function(context) {
              const label = context.label || '';
              const value = context.parsed;
              const total = context.dataset.data.reduce((a, b) => a + b, 0);
              const percentage = ((value / total) * 100).toFixed(1);
              return `${label}: $${value.toLocaleString()} (${percentage}%)`;
            }
          }
        }
      }
    }
  });

  // Assets by Currency Chart
  const assetsByCurrencyCtx = document.getElementById('assetsByCurrencyChart').getContext('2d');
  new Chart(assetsByCurrencyCtx, {
    type: 'doughnut',
    data: {
      labels: <%= Jason.encode!(Enum.map(@dashboard_data.charts.assets_by_currency, & &1.currency)) %>,
      datasets: [{
        data: <%= Jason.encode!(Enum.map(@dashboard_data.charts.assets_by_currency, fn asset -> 
          Decimal.to_float(asset.value)
        end)) %>,
        backgroundColor: colors.slice(0, length(@dashboard_data.charts.assets_by_currency)),
        borderWidth: 2,
        borderColor: '#ffffff'
      }]
    },
    options: {
      responsive: true,
      maintainAspectRatio: false,
      plugins: {
        legend: {
          position: 'bottom',
          labels: {
            padding: 20,
            usePointStyle: true
          }
        },
        tooltip: {
          callbacks: {
            label: function(context) {
              const label = context.label || '';
              const value = context.parsed;
              const total = context.dataset.data.reduce((a, b) => a + b, 0);
              const percentage = ((value / total) * 100).toFixed(1);
              return `${label}: $${value.toLocaleString()} (${percentage}%)`;
            }
          }
        }
      }
    }
  });

  // Debts by Currency Chart
  const debtsByCurrencyCtx = document.getElementById('debtsByCurrencyChart').getContext('2d');
  new Chart(debtsByCurrencyCtx, {
    type: 'doughnut',
    data: {
      labels: <%= Jason.encode!(Enum.map(@dashboard_data.charts.debts_by_currency, & &1.currency)) %>,
      datasets: [{
        data: <%= Jason.encode!(Enum.map(@dashboard_data.charts.debts_by_currency, fn debt -> 
          Decimal.to_float(debt.value)
        end)) %>,
        backgroundColor: colors.slice(0, length(@dashboard_data.charts.debts_by_currency)),
        borderWidth: 2,
        borderColor: '#ffffff'
      }]
    },
    options: {
      responsive: true,
      maintainAspectRatio: false,
      plugins: {
        legend: {
          position: 'bottom',
          labels: {
            padding: 20,
            usePointStyle: true
          }
        },
        tooltip: {
          callbacks: {
            label: function(context) {
              const label = context.label || '';
              const value = context.parsed;
              const total = context.dataset.data.reduce((a, b) => a + b, 0);
              const percentage = ((value / total) * 100).toFixed(1);
              return `${label}: $${value.toLocaleString()} (${percentage}%)`;
            }
          }
        }
      }
    }
  });
});
</script>
