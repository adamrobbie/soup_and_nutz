name: CI

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

env:
  MIX_ENV: test

jobs:
  test:
    name: Test
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres:15
        env:
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: soup_and_nutz_test
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Elixir
      uses: erlef/setup-beam@v1
      with:
        elixir-version: '1.16.0'
        otp-version: '26.2'

    - name: Cache deps
      uses: actions/cache@v3
      id: cache-deps
      with:
        path: deps
        key: ${{ runner.os }}-mix-${{ hashFiles('**/mix.lock') }}
        restore-keys: |
          ${{ runner.os }}-mix-

    - name: Cache compiled build
      uses: actions/cache@v3
      id: cache-build
      with:
        path: _build
        key: ${{ runner.os }}-build-${{ hashFiles('**/mix.lock') }}
        restore-keys: |
          ${{ runner.os }}-build-

    - name: Install dependencies
      if: steps.cache-deps.outputs.cache-hit != 'true'
      run: mix deps.get

    - name: Compile dependencies
      if: steps.cache-build.outputs.cache-hit != 'true'
      run: mix deps.compile

    - name: Compile application
      run: mix compile --warnings-as-errors

    - name: Check code formatting
      run: mix format --check-formatted

    - name: Run Credo
      run: mix credo --strict

    - name: Setup test database
      run: mix ecto.create && mix ecto.migrate
      env:
        DATABASE_URL: postgresql://postgres:postgres@localhost:5432/soup_and_nutz_test

    - name: Run tests with coverage
      run: mix coveralls.json
      env:
        DATABASE_URL: postgresql://postgres:postgres@localhost:5432/soup_and_nutz_test

    - name: Upload coverage to Coveralls
      uses: coverallsapp/github-action@v2
      with:
        github-token: ${{ secrets.GITHUB_TOKEN }}
        path-to-lcov: cover/excoveralls.json
        format: lcov

  assets:
    name: Assets Test
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
        cache-dependency-path: assets/package-lock.json

    - name: Install Node.js dependencies
      run: npm ci --prefix assets

    - name: Build assets
      run: npm run build --prefix assets || true